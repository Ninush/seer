stl_df <- stl_df %>%  dplyr::select(-c("seasonal_strength"))
iris %>% select (-c(Sepal.Length, Sepal.Width))
iris %>% select (-c(Sepal.Length))
stl_df <- as.data.frame(do.call("rbind", stl_ftrs))
stl_df <- dplyr::bind_rows(lapply(stl_ftrs, as.data.frame.list))
stl_df$seasonal_strength1[is.na(stl_df$seasonal_strength1)==TRUE] =
stl_df$seasonal_strength[is.na(stl_df$"seasonal_strength")==FALSE]
stl_df$seasonal_strength2[is.na(stl_df$seasonal_strength2)==TRUE]=0
stl_df <- stl_df %>%  dplyr::select(-c("seasonal_strength"))
drop <- c("seasonal_strength")
stl_df <- stl_df %>%  dplyr::select(-drop)
stl_df <- stl_df %>% dplyr::select(-drop)
stl_df <- dplyr::bind_rows(lapply(stl_ftrs, as.data.frame.list))
stl_df$seasonal_strength1[is.na(stl_df$seasonal_strength1)==TRUE] =
stl_df$seasonal_strength[is.na(stl_df$"seasonal_strength")==FALSE]
stl_df$seasonal_strength2[is.na(stl_df$seasonal_strength2)==TRUE]=0
names( stl_df)
stl_df <- stl_df[, -"seasonal_strength"]
stl_df <- stl_df %>% dplyr::select(-one_of("seasonal_strength"))
names( stl_df)
?one_of
rm(list=ls())
library(seer)
a=6
b=6
a>=b
library(seer)
library(seer)
a <- numeric(5)
a
library(seer)
library(seer)
library(seer)
library(seer)
training <- rnorm(20)
fit_nnetar <- forecast::nnetar(training)
training <- rnorm(5)
fit_nnetar <- forecast::nnetar(training)
fcast <- forecast(fit_nnetar, PI=TRUE, h=h, level=c(95))
library(forecast)
fcast <- forecast(fit_nnetar, PI=TRUE, h=h, level=c(95))
h=14
fit_nnetar <- forecast::nnetar(training)
fcast <- forecast(fit_nnetar, PI=TRUE, h=h, level=c(95))
tryCatch({
fit_nnetar <- forecast::nnetar(training)
fcast <- forecast(fit_nnetar, PI=TRUE, h=h, level=c(95))
}, error=function(e){fcast <- snaive(training, h=h, level=c(95))})
training <- rnorm(5)
training <- as.ts(training, frequency=12)
fit_nnetar <- forecast::nnetar(training)
fcast <- forecast(fit_nnetar, PI=TRUE, h=h, level=c(95))
library(seer)
library(seer)
library(seer)
#' @param tslist a list of time series
#' @param models a vector of models to compute
#' @param database whether the time series is from mcomp or other
#' @param accuracyFun function to calculate the accuracy measure, the arguments
#' for the accuracy function should be training, test and forecast
#' @param h forecast horizon
#' @param length_out number of measures calculated by a single function
#' @return a list with accuracy matrix, vector of arima models and vector of ets models
#' @author Thiyanga Talagala
#' @export
fcast_accuracy <- function(tslist, models = c("ets", "arima", "rw", "rwd", "wn",
"theta", "stlar", "nn", "snaive", "mstlarima","mstlets", "tbats"), database
, accuracyFun, h, length_out){
arima_models <- NA
ets_models <- NA
if (database == "other") {
train_test <- lapply(tslist, function(temp){list(training=head_ts(temp,h), test=tail_ts(temp, h))})
} else {
train_test <- lapply(tslist, function(temp){list(training=temp$x, test=temp$xx)})
}
if ("arima"%in% models) {
arima_cal <- lapply(train_test, accuracy_arima, function_name=accuracyFun)
arima_models <- sapply(arima_cal, function(temp){temp$ARIMAmodel})
}
if ("ets"%in% models) {
ets_cal <- lapply(train_test, accuracy_ets, function_name=accuracyFun)
ets_models <- sapply(ets_cal, function(temp){temp$ETSmodel})
}
mat <- sapply(models, function(f){
switch(f,
arima = sapply(arima_cal, function(temp){temp$ARIMAaccuracy}),
ets = sapply(ets_cal, function(temp){temp$ETSaccuracy}),
rw = sapply(train_test, accuracy_rw, function_name=accuracyFun),
rwd = sapply(train_test, accuracy_rwd, function_name=accuracyFun, length_out=length_out),
wn = sapply(train_test, accuracy_wn, function_name=accuracyFun, length_out=length_out),
theta = sapply(train_test, accuracy_theta, function_name=accuracyFun, length_out=length_out),
stlar = sapply(train_test, accuracy_stlar, function_name=accuracyFun, length_out=length_out),
nn = sapply(train_test, accuracy_nn, function_name=accuracyFun, length_out=length_out),
snaive = sapply(train_test, accuracy_snaive, function_name=accuracyFun, length_out=length_out),
mstlets = sapply(train_test, accuracy_mstl, function_name=accuracyFun, length_out=length_out, mtd="ets"),
mstlarima = sapply(train_test, accuracy_mstl, function_name=accuracyFun, length_out=length_out, mtd="arima"),
tbats = sapply(train_test, accuracy_tbats, function_name=accuracyFun, length_out=length_out)
)
})
return(list(accuracy=mat, ARIMA = arima_models, ETS =ets_models))
}
#'@examples
library(Mcomp)
tslist <- list(M3[[1]], M3[[2]])
fcast_accuracy(tslist=tslist,models= c("arima","ets","rw","rwd", "theta", "stlar", "nn", "snaive", "mstl"),database ="M3", cal_MASE, h=6)
library(seer)
if (!require('hexSticker')) install.packages('hexSticker')
install.packages("hexSticker")
library(hexSticker)
imgurl <- "https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/Emojione_1F30A.svg/512px-Emojione_1F30A.svg.png"
sticker(imgurl, package="seer",
s_x=1, s_y=.8, s_width=.5, s_height=.5,
h_color="#ff9966", h_fill="white", p_color = "#4E94B5",
filename="zinbwave.png")
?sticker
sticker(imgurl, package="seer",
s_x=1, s_y=.8, s_width=.5, s_height=.5,
h_color="ediumspringgreen", h_fill="navy", p_color = "white",
filename="seer.png")
sticker(imgurl, package="seer",
s_x=1, s_y=.8, s_width=.5, s_height=.5,
h_color="ediumspringreen", h_fill="navy", p_color = "white",
filename="seer.png")
sticker(imgurl, package="seer",
s_x=1, s_y=.8, s_width=.5, s_height=.5,
h_color="mediumspringgreen", h_fill="navy", p_color = "white",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1, s_y = 1, s_width = 1.05, package = "seer",
p_y = 1.1,
p_family = "Muli",
p_size = 15,
h_color="mediumspringgreen", h_fill="navy", p_color = "white",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1, s_y = 1, s_width = 1.05,
p_y = 1.1,
p_family = "Muli",
p_size = 15,
h_color="mediumspringgreen", h_fill="navy", p_color = "white",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1, s_y = 1, s_width = 1.05,
p_y = 1.1,
p_size = 32,
h_color="mediumspringgreen", h_fill="navy", p_color = "white",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1, s_y = 1, s_width=.5, s_height=.5,
p_y = 1.1,
p_size = 32,
h_color="mediumspringgreen", h_fill="navy", p_color = "white",
filename="seer.png")
sticker( package="seer",
s_x = 1, s_y = 1, s_width=.5, s_height=.5,
p_y = 1.1,
p_size = 32,
h_color="mediumspringgreen", h_fill="navy", p_color = "white",
filename="seer.png")
library(seer)
m4h <- subset(M4, "hourly")
data(M4)
m4h <- subset(M4, "hourly")
m4h
frequency(m4h$H1$x)
m4d <- subset(M4, "daily")
frequency(m4d$D1$x)
m4d <- subset(M4, "weekly")
frequency(m4d$W1$x)
sticker(imgurl, package="seer",
s_x = 1, s_y = 1, s_width=.5, s_height=.5,
p_y = 1.1,
p_size = 32,
h_color="navy", h_fill="mediumspringgreen", p_color = "white",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1, s_y = 1, s_width=.5, s_height=.5,
p_y = 1.1,
p_size = 32,
h_color="navy", h_fill="mediumspringgreen", p_color = "white",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1, s_y = 1, s_width=.5, s_height=.5,
p_y = 1.1,
p_size = 32,
h_color="navy", h_fill="stateblue", p_color = "mediumspringgreen",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1, s_y = 1, s_width=.5, s_height=.5,
p_y = 1.1,
p_size = 32,
h_color="navy", h_fill="stateblue1", p_color = "mediumspringgreen",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1, s_y = 1, s_width=.5, s_height=.5,
p_y = 1.1,
p_size = 32,
h_color="navy", h_fill="slateblue1", p_color = "mediumspringgreen",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1, s_y = 1, s_width=.5, s_height=.5,
p_y = 1.1,
p_size = 32,
h_color="slateblue1", h_fill="mediumspringgreen", p_color = "navy",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1.07, s_y = 1.07, s_width=.5, s_height=.5,
p_y = 1.1,
p_size = 28,
h_color="slateblue1", h_fill="mediumspringgreen", p_color = "navy",
filename="seer.png")
sticker(imgurl, package = "seer",
p_size = 28,
p_color = "#FFFFFFDD",
s_x = 1.07, s_y = 1.07,
s_width = 1.6, s_height = 1,
h_fill = "#f9690e",
h_color = "#f39c12", filename = seer.png)
sticker(imgurl, package = "seer",
p_size = 28,
p_color = "#FFFFFFDD",
s_x = 1.07, s_y = 1.07,
s_width = 1.6, s_height = 1,
h_fill = "#f9690e",
h_color = "#f39c12", filename = "seer.png")
sticker(imgurl, package = "seer",
p_size = 28,
p_color = "#FFFFFFDD",
s_x = 1.07, s_y = 1.07,
s_width = 1.6, s_height = 1,
h_fill = "#f9690e",
h_color = "#f39c12", filename = "seer.png")
sticker(imgurl, package = "seer",
p_size = 28,
p_color = "#FFFFFFDD",
s_x = 1.07, s_y = 1.07,
s_width = 0.5, s_height = 0.5,
h_fill = "#f9690e",
h_color = "#f39c12", filename = "seer.png")
sticker(imgurl, package="seer",
s_x = 1.07, s_y = 1.07, s_width=.5, s_height=.5,
p_size = 28,
h_color="slateblue1", h_fill="mediumspringgreen", p_color = "navy",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1.07, s_y = 1.07, s_width=.5, s_height=.5,
p_size = 28,
h_color="slateblue1", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1.07, s_y = 1.07, s_width=.5, s_height=.5,
p_size = 28,
h_color="mediumspringgreen", h_fill="mediumspringgreen", p_color = "navy",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1.07, s_y = 1.07, s_width=.5, s_height=.5,
p_size = 28,
h_color="navy", h_fill="mediumspringgreen", p_color = "navy",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1.07, s_y = 1.07, s_width=.3, s_height=.3,
p_size = 28,
h_color="navy", h_fill="mediumspringgreen", p_color = "navy",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 2.07, s_y = 1.07, s_width=.3, s_height=.3,
p_size = 28,
h_color="navy", h_fill="mediumspringgreen", p_color = "navy",
filename="seer.png")
sticker(imgurl, package="seer",
s_x = 1, s_y = 1.07, s_width=.3, s_height=.3,
p_size = 28,
h_color="navy", h_fill="mediumspringgreen", p_color = "navy",
filename="seer.png")
sticker("hexsticker/crystal.png", package="seer",
s_x = 1, s_y = 1.07, s_width=.3, s_height=.3,
p_size = 28,
h_color="navy", h_fill="mediumspringgreen", p_color = "navy",
filename="seer.png")
sticker("hexsticker/crystal.png", package="seer",
s_x = 1, s_y = 1.07, s_width=.3, s_height=.3,
p_size = 28,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker("hexsticker/crystal.png", package="seer",
s_x = 1.07, s_y = .07, s_width=.3, s_height=.3,
p_size = 28,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker("hexsticker/crystal.png", package="seer",
s_x = 1.07, s_y = .1, s_width=.3, s_height=.3,
p_size = 28,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker("hexsticker/crystal.png", package="seer",
s_x = 1.07, s_y = 0.5, s_width=.3, s_height=.3,
p_size = 28,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker("hexsticker/crystal.png", package="seer",
s_x = 1.07, s_y = 0.8, s_width=.3, s_height=.3,
p_size = 28,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
plot(M4[[1]]$x)
sticker("hexsticker/crystal.png", package="seer",
s_x = 1.07, s_y = 0.8, s_width=.3, s_height=.3,
p_size = 28,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
library(forecast)
library(ggfortify)
d.arima <- forecast::auto.arima(AirPassengers
)
p <- autoplot(forecast::forecast(d.arima, h = 10), predict.size = 1, size = 1)
p
autoplot
?autoplot
sticker(p, package="seer",
s_x = 1.07, s_y = 0.8, s_width=.3, s_height=.3,
p_size = 28,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
p <- autoplot(forecast::forecast(d.arima, h = 10), predict.size = 1, size = 1)
sticker(p, package="seer",
s_x = 1.07, s_y = 0.8, s_width=.3, s_height=.3,
p_size = 28,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
p <- p + theme_void() + theme_transparent()
library(ggplot2)
d.arima <- forecast::auto.arima(AirPassengers)
p <- autoplot(forecast::forecast(d.arima, h = 10), predict.size = 1, size = 1)
p <- p + theme_void() + theme_transparent()
sticker(p, package="seer",
s_x = 1.07, s_y = 0.8, s_width=.3, s_height=.3,
p_size = 28,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker(p, package="seer",
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker(p, package="seer")
p
sticker(p, package="seer",
s_x = 1.07, s_y = 0.8, s_width=.3, s_height=.3,
p_size = 32,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
?autoplot
d.arima <- forecast::auto.arima(AirPassengers)
p <- autoplot(forecast::forecast(d.arima, h = 10), predict.size = 1, size = 1)
p <- p + theme_void() + theme_transparent()+ theme(legend.title=element_blank()
)
p
p <- autoplot(forecast::forecast(d.arima, h = 10), predict.size = 1, size = 1)+ theme(legend.title=element_blank())
p
p <- autoplot(AirPassengers)+ theme(legend.title=element_blank())
p
p <- p + theme_void() + theme_transparent()
p
sticker(p, package="seer",
s_x = 1.07, s_y = 0.8, s_width=.3, s_height=.3,
p_size = 32,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker(p, package="seer",
s_x = 1, s_y = 0.8, s_width=.3, s_height=.3,
p_size = 32,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker("tsplot.png", package="seer",
s_x = 1.07, s_y = 0.8, s_width=.3, s_height=.3,
p_size = 32,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
imgurl <- "https://www.bing.com/images/search?view=detailV2&ccid=iCyTxomE&id=C9D5F0AD13B52DCEE6B9FDB573ECEDEEDCC37AA6&thid=OIP.iCyTxomEFt1Fhc5UluTLkQHaHa&mediaurl=https%3a%2f%2fcdn.pixabay.com%2fphoto%2f2012%2f04%2f23%2f15%2f01%2fwater-38389_640.png&exph=640&expw=640&q=free+image+for+crystal+ball&simid=608055126771303286&selectedIndex=21&ajaxhist=0"
sticker(imgurl, package="seer",
s_x = 1.07, s_y = 0.8, s_width=.3, s_height=.3,
p_size = 32,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
imgurl <- "https://cdn.pixabay.com/photo/2012/04/23/15/01/water-38389_640.png"
sticker(imgurl, package="seer",
s_x = 1.07, s_y = 0.8, s_width=.3, s_height=.3,
p_size = 32,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
imgurl <- "https://cdn.pixabay.com/photo/2012/04/23/15/01/water-38389_640.png"
sticker(imgurl, package="seer",
s_x = 1.07, s_y = 0.8, s_width=.5, s_height=.5,
p_size = 32,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker("hexsticker/navy.png", package="seer",
s_x = 1.07, s_y = 0.8, s_width=.5, s_height=.5,
p_size = 32,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker("hexsticker/navy.png", package="seer",
s_x = 1.07, s_y = 0.5, s_width=.5, s_height=.5,
p_size = 32,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker("hexsticker/navy.png", package="seer",
s_x = 1.07, s_y = 0.5, s_width=.1, s_height=.1,
p_size = 36,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker("hexsticker/navy.png", package="seer",
s_x = 1.07, s_y = 0.5, s_width=.1, s_height=.1,
p_size = 48,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker("hexsticker/navy.png", package="seer",
s_x = 1.07, s_y = 0.5, s_width=.1, s_height=.1, p_y = 1.1
p_size = 36,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker("hexsticker/navy.png", package="seer",
s_x = 1.07, s_y = 0.5, s_width=.1, s_height=.1, p_y = 1.1,
p_size = 36,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker("hexsticker/navy.png", package="seer",
s_x = 1.07, s_y = 0.5, s_width=.1, s_height=.1, p_y = 1.1,
p_size = 48,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="seer.png")
sticker("hexsticker/navy.png", package="seer",
s_x = 1.07, s_y = 0.5, s_width=.1, s_height=.1, p_y = 1.1,
p_size = 48,
h_color="mediumspringgreen", h_fill="navy", p_color = "mediumspringgreen",
filename="hexsticker/seer.png")
library(seer)
library(seer)
library(seer)
library(seer)
library(seer)
library(seer)
library(seer)
library(seer)
badgecreatr::badgeplacer(status = "wip" , githubaccount = "thiyangt",githubrepo = "seer")
badgecreatr::badgeplacer(status = "wip" , githubaccount = "thiyangt",githubrepo = "seer")
badgecreatr::badgeplacer(githubaccount = "thiyangt",githubrepo = "seer")
badgecreatr::badgeplacer(githubaccount = "thiyangt",githubrepo = "seer")
devtools::install_github("rmhogervorst/badgecreatr")
library("badgecreatr")
badgecreatr::badgeplacer(githubaccount = "thiyangt",githubrepo = "seer")
badgecreatr::badgeplacer(githubaccount = "thiyangt",githubrepo = "seer")
?badgeplacer
badgeplacer(location = ".", status = "active", githubaccount = "thiyangt",
githubrepo = "seer", branch = NULL, name = "README.Rmd")
library(seer)
?sltf
?stlf
?`forecast
?forecast
?mstl
?msts
data(M4)
d1 <- convert_msts(M4[["D1"]]$x, "daily")
simulated_mstl <- lapply(d1, sim_mstlbased, Future=TRUE, Nsim=2, extralength=14, Combine=FALSE, mtd="ets")
data(M4)
d1 <- M4[["D1"]]$x
d1 <- convert_msts(d1, "daily")
simulated_mstl <- lapply(d1, sim_mstlbased, Future=TRUE, Nsim=2, extralength=14, Combine=FALSE, mtd="ets")
data(M4)
d1 <- M4[["D1"]]$x
d1 <- convert_msts(d1, "daily")
data(M4)
M4d <- seer::subset(M4, "daily")[1:2]
data(M4)
M4d <- seer::subset(M4, "daily")
data(M4)
M4d <- list(M4[["D1"]], M4[["D2"]])
daily_ts <- lapply(M4d, function(temp){temp$x <- convert_msts(temp$x, "daily")})
simulated_mstl <- lapply(daily_ts, sim_mstlbased, Future=TRUE, Nsim=2, extralength=14, Combine=FALSE, mtd="ets")
M4[["D1"]]
data(M4)
M4d <- subset(M4, "daily")
m4d <- M4d[1:2]
daily_ts <- lapply(M4d, function(temp){temp$x <- convert_msts(temp$x, "daily")})
simulated_mstl <- lapply(daily_ts, sim_mstlbased, Future=TRUE, Nsim=2, extralength=14, Combine=FALSE, mtd="ets")
data(M4)
M4d <- subset(M4, "daily")
m4d <- M4d[1:2]
daily_ts <- lapply(M4d, function(temp){temp$x <- convert_msts(temp$x, "daily")
return(temp)})
simulated_mstl <- lapply(daily_ts, sim_mstlbased, Future=TRUE, Nsim=2, extralength=14, Combine=FALSE, mtd="ets")
tslist <- list(M3[[1]], M3[[2]])
fcast_accuracy(tslist=tslist, models= c("arima","ets","rw","rwd", "theta", "nn"), database ="M3", cal_MASE, h=6, length_out = 1)
tslist <- list(M3[[1]], M3[[2]])
fcast_accuracy(tslist=tslist, models= c("arima","ets","rw","rwd", "theta", "nn", "mstl"), database ="M3", cal_MASE, h=6, length_out = 1)
?theta
?tbats
# steps 3 and 4 applied to yearly series of M1 competition
data(M1)
yealy_m1 <- subset(M1, "yearly")
# steps 3 and 4 applied to yearly series of M1 competition
data(M1)
yearly_m1 <- subset(M1, "yearly")
library(seer)
library(seer)
library(seer)
library(seer)
install.packages("roxygen2")
install.packages("rdatamarket")
install.packages("Quandl")
library(rdatamarket)
library(Quandl)
install.packages(c("broom", "ggplot2"))
